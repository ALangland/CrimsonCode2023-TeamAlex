<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QUMAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>